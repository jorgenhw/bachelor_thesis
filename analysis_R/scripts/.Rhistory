group_by(new_topic, run) %>%
summarise("error_rate_per_run" = mean(MISS_binary)) %>%
ungroup(new_topic, run) %>%
group_by(run) %>%
summarise("error_rate_per_topic_across_runs" = mean(error_rate_per_run))
topic_classf %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run" = mean(MISS_binary))
topic_classf %>%
group_by(run) %>%
summarise("error_rate_per_topic_across_runs" = mean(error_rate_per_run))
topic_classf %>%
group_by(run) %>%
summarise("error_rate_per_topic_across_runs" = mean(MISS_binary))
topic_classf %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run" = mean(MISS_binary)) %>%
ungroup(new_topic, run) %>%
group_by(run) %>%
summarise("error_rate_per_topic_across_runs" = mean(error_rate_per_run))
topic_classf %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run" = mean(MISS_binary))
topic_classf %>%
group_by(run) %>%
summarise("error_rate_per_topic_across_runs" = mean(MISS_binary))
merge(uno, dos, by ="run", all.x = T, all.y = F)
uno <- topic_classf %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run" = mean(MISS_binary))
dos <- topic_classf %>%
group_by(run) %>%
summarise("error_rate_per_topic_across_runs" = mean(MISS_binary))
merge(uno, dos, by ="run", all.x = T, all.y = F)
view(merge(uno, dos, by ="run", all.x = T, all.y = F))
tress <- merge(uno, dos, by ="run", all.x = T, all.y = F)
quatro <- tress %>%
mutate(diff = error_rate_per_run - error_rate_per_topic_across_runs)
View(quatro)
uno <- topic_classf %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run" = mean(MISS_binary))
dos <- topic_classf %>%
group_by(run) %>%
summarise("error_rate_per_topic_across_topics" = mean(MISS_binary))
uno <- topic_classf %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run" = mean(MISS_binary))
dos <- topic_classf %>%
group_by(run) %>%
summarise("error_rate_per_run_across_topics" = mean(MISS_binary))
uno <- topic_classf %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run_per_topic" = mean(MISS_binary))
dos <- topic_classf %>%
group_by(run) %>%
summarise("error_rate_per_run_across_topics" = mean(MISS_binary))
tress <- merge(uno, dos, by ="run", all.x = T, all.y = F)
tress <- merge(uno, dos, by ="run", all.x = T, all.y = F)
quatro <- tress %>%
mutate(diff = error_rate_per_run_per_topic - error_rate_per_run_across_topics)
view(quatro)
View(quatro)
singo <- quatro %>%
filter(new_topic==3)
View(singo)
length(quatro)
length(quatro$run)
dexp(1)
dexp(1)
dexp(1)
dexp(1)
dexp(1)
dexp(1)
dexp(1)
dexp(1)
dexp(1)
dexp(0.5)
dexp(2)
vestin_report_jonf <- list.files(path = "../data/vestinn/ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
# Classification report (= classf_report_jonf)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vestin_report_jonf <- list.files(path = "../data/vestinn/ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
setwd("~/Desktop/CogSci/Bachelor thesis/bachelor_thesis/analysis_R/scripts")
# Classification report (= classf_report_jonf)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vestin_report_jonf <- list.files(path = "../data/vestinn/ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
setwd("~/Desktop/CogSci/Bachelor thesis/bachelor_thesis/analysis_R/scripts")
# Classification report (= classf_report_jonf)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vestin_report_jonf <- list.files(path = "../data/vestinn/ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
# Classification report (= classf_report_jonf)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vestin_report_jonf <- list.files(path = "../data/vestinn/ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
# Classification report (= classf_report_jonf)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vestin_report_jonf <- list.files(path = "../data/vestinn/ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse)
# Classification report (= classf_report_jonf)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vestin_report_jonf <- list.files(path = "../data/vestinn/ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
vestin_report_jonf <- list.files(path = "/Users/wibe/Desktop/CogSci/Bachelor thesis/bachelor_thesis/analysis_R/data/vestinn:ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
classf_report_vestin %>%
group_by(filename) %>%
summarise("error_rate_per_run" = mean(MISS_binary))
classf_report_vestin <- list.files(path = "/Users/wibe/Desktop/CogSci/Bachelor thesis/bachelor_thesis/analysis_R/data/vestinn:ScandiBERT", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
# Creating a numeric variable for miss/true
classf_report_vestin['MISS_binary'] <- ifelse(classf_report_jonf$Misclassification == "TRUE", 1, 0)
classf_report_vestin %>%
group_by(filename) %>%
summarise("error_rate_per_run" = mean(MISS_binary))
#Overall error rate
classf_report_vestin %>%
summarise("over_all_error_rate" = mean(MISS_binary))
# Merging topics with classification report and minimizing df
topic_classf_vestin <- merge(classf_report_jonf,topics, by = "Text", all.x = T, all.y = F) %>%
rename(run = filename) %>%
select(Text, `Predicted Labels`, `True Labels`, new_topic, MISS_binary, run)
topic_classf_vestin <- topic_classf_vestin[complete.cases(topic_classf_vestin), ] # removing rows with NA's in topic (50 rows of which 10 were in Arabic)
unouno <- topic_classf_vestin %>%
group_by(new_topic, run) %>%
summarise("error_rate_per_run_per_topic" = mean(MISS_binary))
dosdos <- topic_classf_vestin %>%
group_by(run) %>%
summarise("error_rate_per_run_across_topics" = mean(MISS_binary))
tresstress <- merge(uno, dos, by ="run", all.x = T, all.y = F)
quatroquatro <- tress %>%
mutate(diff = error_rate_per_run_per_topic - error_rate_per_run_across_topics)
singosingo <- quatroquatro %>%
filter(new_topic == 3)
twomodels <- merge(singo, singosingo, by = "run", all.x = T, all.y = F)
twomodels <- merge(singo, singosingo, by = "run", all.x = T, all.y = F)
singo$model = "jonf"
singosingo$model = "vestin"
twomodels <- merge(singo, singosingo, by = "run", all.x = T, all.y = F)
View(twomodels)
twomodels <- rbind(singo, singosingo)
View(twomodels)
library(rethinking)
pacman::p_load(rethinking)
install.packages("rethinnking")
install.packages("rethinking")
pacman::p_load(rethinking)
install.packages("BiocManager")
pacman::p_load(rethinking)
install.packages(c("BiocManager", "coda", "mvtnorm", "devtools")
install.packages(c("BiocManager", "coda", "mvtnorm", "devtools"))
install.packages(c("BiocManager", "coda", "mvtnorm", "devtools"))
install.packages(c("BiocManager", "coda", "mvtnorm", "devtools"))
install.packages(c("BiocManager", "coda", "mvtnorm", "devtools"))
install.packages(c("BiocManager", "coda", "mvtnorm", "devtools"))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
example(stan_model, package = "rstan", run.dontrun = TRUE)
library(devtools)
devtools::install_github("rmcelreath/rethinking",ref="Experimental")
m1 <- ulan(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = singo, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = singo, chains = 4)
library(rethinking)
library(devtools::rethinking)
library(rethinking)
install.packages("rethinking")
install.packages(c("coda","mvtnorm","devtools","loo","dagitty","shape"))
devtools::install_github("rmcelreath/rethinking")
install.packages(c("coda","mvtnorm","devtools","loo","dagitty","shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
devtools::install_github("rmcelreath/rethinking")
library(rethinking)
library(rethinking)
library(devtools)
devtools::install_github("rmcelreath/rethinking")
library(rethinking)
install.packages(c('coda','mvtnorm'))
options(repos=c(getOption('repos'),rethinking='http://xcelab.net/R'))
install.packages('rethinking',type='source')
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = singo, chains = 4)
library(rethinking)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = singo, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = singo, chains = 4)
View(twomodels)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = singosingo, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels, chains = 4)
View(twomodels)
singo$model = 1
singosingo$model = 2
singosingo <- quatroquatro %>%
filter(new_topic == 3)
twomodels <- rbind(singo, singosingo)
library(tidyverse)
singosingo <- quatroquatro %>%
filter(new_topic == 3)
twomodels <- rbind(singo, singosingo)
singo <- quatro %>%
filter(new_topic==3)
singo$model = 1
singosingo$model = 2
singosingo <- quatroquatro %>%
filter(new_topic == 3)
twomodels <- rbind(singo, singosingo)
singo$model = 1
singosingo$model = 2
singosingo$model = 2
twomodels <- rbind(singo, singosingo)
singo <- quatro %>%
filter(new_topic==3)
singo$model = 1
singosingo <- quatroquatro %>%
filter(new_topic == 3)
singosingo$model = 2
twomodels <- rbind(singo, singosingo)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels, chains = 4)
twomodels_uno <- twomodels %>%
select(diff, model)
View(twomodels_uno)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm( mu , sigma ) ,
mu <- a,
a ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
twomodels_uno$model <- as.factor(twomodels_uno$model)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a,
a ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
twomodels_uno <- twomodels %>%
select(diff)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a,
a ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
precis(m1)
plot(coeftab(m1),by.model=TRUE)
twomodels_uno <- twomodels %>%
select(diff, model)
twomodels_uno <- twomodels %>%
select(diff, model)
twomodels_uno$model <- as.factor(twomodels_uno$model)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ binom(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ dbinom(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
twodosmodellist <- list(
diff = twomodels_uno$diff,
model = twomodels_uno$model)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twodosmodellist, chains = 4)
View(twodosmodellist)
twomodels_uno$model <- as.numeric(twomodels_uno$model)
twodosmodellist <- list(
diff = twomodels_uno$diff,
model = twomodels_uno$model)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twodosmodellist, chains = 4)
View(twodosmodellist)
twodosmodellist <- as.tibble(twodosmodellist)
View(twodosmodellist)
twomodels_uno <- as.tibble(twomodels_uno)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twodosmodellist, chains = 4)
twodosmodellist <- list(
diff = twomodels_uno$diff,
model = twomodels_uno$model)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twodosmodellist, chains = 4)
singo <- quatro %>%
filter(new_topic==3)
singo$model = 1
singosingo <- quatroquatro %>%
filter(new_topic == 3)
singosingo$model = 2
twomodels <- rbind(singo, singosingo)
twomodels_uno <- twomodels %>%
select(diff, model)
twomodels_uno$model <- as.factor(twomodels_uno$model)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 3)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 2)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
library(devtools)
devtools::install_github("stan-dev/rstan", ref = "develop",
subdir = "rstan/rstan")
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
install.packages(c("Rcpp", "rstan"), type = "source")
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
twomodels_uno
write_csv("twomodels_uno.csv")
?write.csv()
write.csv("twomodels_uno.csv")
setwd("~/Desktop/CogSci/Bachelor thesis/bachelor_thesis/analysis_R/scripts")
write.csv("twomodels_uno.csv")
write.csv(twomodels_uno,"twomodels_uno.csv")
library(rethinking)
m1 <- ulam(
alist(
diff ~ dnorm(mu, sigma),
mu <- a[model],
a[model] ~ dnorm(0.40, 0.15) ,
sigma ~ dexp(2)
), data = twomodels_uno, chains = 4)
